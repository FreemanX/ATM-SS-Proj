package atmss.bams;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

//DO NOT CHANGE THIS CLASS !!!
//DO NOT CHANGE THIS CLASS !!!
//DO NOT CHANGE THIS CLASS !!!
//======================================================================
// BAMSHandler
/**
 *
 * The BAMSHandler class is an interface between ATMSS and BAMS. It is used to
 * invoke different PHP programs resided on web server for various functions
 * related to BAMS.
 */
public class BAMSHandler {
	private String prefix = "";

	// ------------------------------------------------------------
	// BAMSHandler
	/**
	 *
	 * @param prefix
	 *            prefix for connecting to BAMS
	 */
	public BAMSHandler(String prefix) {
		this.prefix = prefix;
	} // BAMSHandler

	// ------------------------------------------------------------
	// login
	/**
	 *
	 * @param cardNo
	 *            The card number read from the inserted card
	 * @param pin
	 *            The pin input by user
	 * @return Credential for successful login;"ERROR" for incorrect card number
	 *         or pin
	 */
	public String login(String cardNo, String pin) {
		String urlStr = prefix + "login.php?cardNo=" + cardNo + "&pin=" + pin;
		System.err.println(urlStr);
		String credential = sendRequest(urlStr);
		return credential;
	} // login

	// ------------------------------------------------------------
	// cashWithdraw
	/**
	 *
	 * @param cardNo
	 *            The card number read from the inserted card
	 * @param accNo
	 *            The account number which you want to withdraw from
	 * @param cred
	 *            The credential generated by the login method
	 * @param amount
	 *            The total amount that you want to withdraw
	 * @return Actual withdrawal amount; negative numbers for unsuccessful
	 *         withdrawal
	 */
	public int cashWithdraw(String cardNo, String accNo, String cred,
			String amount) {
		String urlStr = prefix + "cashWithdraw.php?cardno=" + cardNo
				+ "&accNo=" + accNo + "&cred=" + cred + "&amount=" + amount;
		int outAmount = Integer.parseInt(sendRequest(urlStr));
		return outAmount;
	} // cashWithdraw

	// ------------------------------------------------------------
	// deposit
	/**
	 *
	 * @param cardNo
	 *            The card number read from the inserted card
	 * @param accNo
	 *            The account number which you want to withdraw from
	 * @param cred
	 *            The credential generated by the login method
	 * @param amount
	 *            The total amount that you want to deposit
	 * @return Actual deposit amount; negative numbers for unsuccessful deposit
	 */
	public double deposit(String cardNo, String accNo, String cred, int amount) {
		String urlStr = prefix + "deposit.php?cardno=" + cardNo + "&accNo="
				+ accNo + "&cred=" + cred + "&amount=" + amount;
		double depAmount = Double.parseDouble(sendRequest(urlStr));
		return depAmount;
	} // deposit

	// ------------------------------------------------------------
	// enquiry
	/**
	 *
	 * @param cardNo
	 *            The card number read from the inserted card
	 * @param accNo
	 *            The account number which you want to withdraw form
	 * @param cred
	 *            The credential generated by the login method
	 * @return Balance in the account for successful enquiry; negative numbers
	 *         for unsuccessful enquiry
	 */
	public double enquiry(String cardNo, String accNo, String cred) {
		String urlStr = prefix + "enquiry.php?cardno=" + cardNo + "&accNo="
				+ accNo + "&cred=" + cred;
		double amount = Double.parseDouble(sendRequest(urlStr));
		return amount;
	} // enquiry

	// ------------------------------------------------------------
	// transfer
	/**
	 *
	 * @param cardNo
	 *            The card number read from the inserted card
	 * @param cred
	 *            The credential generated by the login method
	 * @param fromAcc
	 *            The account number which you want to debit from
	 * @param toAcc
	 *            The account number which you want to credit to
	 * @param amount
	 *            The amount that you want to transfer
	 * @return Actual transferred amount for successful transfer; negative
	 *         numbers for unsuccessful transfer
	 */
	public double transfer(String cardNo, String cred, String fromAcc,
			String toAcc, String amount) {
		String urlStr = prefix + "transfer.php?cardno=" + cardNo + "&fromAcc="
				+ fromAcc + "&cred=" + cred + "toAcc=" + toAcc + "&amount="
				+ amount;
		double transAmount = Double.parseDouble(sendRequest(urlStr));
		return transAmount;
	} // transfer

	// ------------------------------------------------------------
	// sendRequest
	/**
	 *
	 * @param urlStr
	 *            The url (string) for making the request
	 * @return The reply string received from BAMS.
	 */
	private String sendRequest(String urlStr) {
		String reply = "-1";

		try {

			URL url = new java.net.URL(urlStr);
			HttpURLConnection con = (HttpURLConnection) url.openConnection();
			InputStreamReader isr = new InputStreamReader(con.getInputStream());
			BufferedReader in = new BufferedReader(isr);
			reply = in.readLine();

		} catch (IOException e) {
			e.printStackTrace();
		}
		return reply;
	} // sendRequest
} // BAMSHandler
